{"version":3,"sources":["components/iconItem.js","components/resultDialog.js","data/params.js","components/itemFilter.js","components/iconGroup.js","App.js","index.js"],"names":["useStyles","makeStyles","root","width","iconAdded","backgroundColor","Icon","margin","height","iconNameArea","padding","iconName","textAlign","fontSize","fontWeight","lineHeight","IconItem","props","icon","uniqueId","addToList","removeFromList","selected","toggleSelectedById","classes","Grid","item","Card","className","clsx","CardActionArea","onClick","CardMedia","component","image","path","replace","title","name","CardContent","Typography","style","whiteSpace","textDisplayStyle","fontFamily","join","generateFabStyle","position","bottom","right","clearFabStyle","ResultDialog","useState","open","setOpen","openTip","setOpenTip","ngaChecked","setNgaChecked","selectOrderChecked","setSelectOrderChecked","returnLinkText","tmpLinkList","linkList","slice","sort","a","b","id","map","link","ngaLink","giteeLink","Grow","in","hasValueInQueue","Fab","variant","color","clearAllSelected","generateLinksFromList","Dialog","keepMounted","onClose","scroll","fullWidth","maxWidth","DialogTitle","Divider","DialogContent","DialogContentText","DialogActions","FormGroup","FormControlLabel","control","Switch","checked","onChange","event","target","label","Tooltip","arrow","disableHoverListener","placement","text","IconButton","disabled","types","idSubTable","filterType","chara","dragon","weapon","amulet","filterParam","chara_rarity","chara_weapon_type","chara_element","dragon_rarity","dragon_element","weapon_rarity","weapon_type","weapon_element","amulet_rarity","ItemFilter","state","container","spacing","alignItems","justify","wrap","this","type","filter","Paper","FormControl","FormLabel","row","Checkbox","filterData","includes","handleCheckBoxChanged","updateIconList","size","Component","theme","createTheme","typography","IconGroup","iconList","selectedIconList","initialzed","initializeIconList","bind","initilizeFilterData","checkMatchFilter","setState","tmpIconList","key","iconJson","push","tmpFilterData","index","element","param","startsWith","parseInt","value","indexOf","splice","idx","findIndex","x","newIconList","console","log","usingNgaLink","inSelectedOrder","newLinkList","nga_path","ThemeProvider","justifyContent","length","indexJson","TabPanel","children","other","role","hidden","Box","p","a11yProps","tab","App","loaded","fetch","then","res","json","result","error","AppBar","Tabs","newValue","indicatorColor","textColor","Tab","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.429e3775.chunk.js","sourcesContent":["import { React } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 120,\r\n  },\r\n  iconAdded: {\r\n    backgroundColor: \"#006699\",\r\n  },\r\n  Icon: {\r\n    margin: \"auto\",\r\n    height: 120,\r\n    width: 120,\r\n  },\r\n  iconNameArea: {\r\n    padding: 0,\r\n    height: \"3em\",\r\n  },\r\n  iconName: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    margin: \"auto\",\r\n    textAlign: \"center\",\r\n    fontSize: \"0.85rem\",\r\n    padding: 0,\r\n    fontWeight: 700,\r\n    lineHeight: 1.2,\r\n  },\r\n});\r\n\r\nfunction IconItem(props) {\r\n  const {\r\n    icon,\r\n    uniqueId,\r\n    addToList,\r\n    removeFromList,\r\n    selected,\r\n    toggleSelectedById,\r\n  } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item>\r\n      <Card className={clsx(classes.root, selected && classes.iconAdded)}>\r\n        <CardActionArea\r\n          onClick={() => {\r\n            if (!selected) {\r\n              //console.log(added, \"added.\");\r\n              toggleSelectedById(uniqueId);\r\n              addToList(uniqueId);\r\n            } else {\r\n              //console.log(added, \"removed.\");\r\n              toggleSelectedById(uniqueId);\r\n              removeFromList(uniqueId);\r\n            }\r\n          }}\r\n        >\r\n          <CardMedia\r\n            className={classes.Icon}\r\n            component=\"img\"\r\n            image={icon.path.replace(\"/s/\", \"/l/\")}\r\n            title={icon.name}\r\n          />\r\n          <CardContent className={classes.iconNameArea}>\r\n            <Typography\r\n              className={classes.iconName}\r\n              style={{ whiteSpace: \"pre-line\" }}\r\n            >\r\n              {icon.name.replace(\"（\", \"\\n（\")}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default IconItem;\r\n","import { React, useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport FileDownloadIcon from \"@material-ui/icons/FileDownload\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CopyToClipBoard from \"react-copy-to-clipboard\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Grow } from \"@material-ui/core\";\r\n\r\nconst textDisplayStyle = {\r\n  fontFamily: ['\"Noto Sans SC\"', \"sans-serif\"].join(\",\"),\r\n  fontSize: \"1rem\",\r\n  fontWeight: 700,\r\n};\r\n\r\nconst generateFabStyle = {\r\n  position: \"fixed\",\r\n  bottom: \"6rem\",\r\n  right: \"2rem\",\r\n  fontFamily: ['\"Noto Sans SC\"', \"sans-serif\"].join(\",\"),\r\n  fontSize: \"0.85rem\",\r\n  fontWeight: 700,\r\n};\r\n\r\nconst clearFabStyle = {\r\n  position: \"fixed\",\r\n  bottom: \"2rem\",\r\n  right: \"2rem\",\r\n  fontFamily: ['\"Noto Sans SC\"', \"sans-serif\"].join(\",\"),\r\n  fontSize: \"0.85rem\",\r\n  fontWeight: 700,\r\n};\r\n\r\nexport default function ResultDialog(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [openTip, setOpenTip] = useState(false);\r\n  const [ngaChecked, setNgaChecked] = useState(true);\r\n  const [selectOrderChecked, setSelectOrderChecked] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleCloseTip = () => {\r\n    setOpenTip(false);\r\n  };\r\n\r\n  const handleClickButton = () => {\r\n    setOpenTip(true);\r\n  };\r\n\r\n  const handleNgaSwitchChange = (event) => {\r\n    setNgaChecked(event.target.checked);\r\n  };\r\n\r\n  const handleOrderSwitchChange = (event) => {\r\n    setSelectOrderChecked(event.target.checked);\r\n  };\r\n\r\n  const returnLinkText = (ngaChecked, selectOrderChecked) => {\r\n    var tmpLinkList = props.linkList.slice();\r\n    if (!selectOrderChecked) {\r\n      tmpLinkList.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n    }\r\n    return tmpLinkList\r\n      .map((link) => {\r\n        if (ngaChecked) {\r\n          return link.ngaLink;\r\n        } else {\r\n          return link.giteeLink;\r\n        }\r\n      })\r\n      .join(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Grow in={props.hasValueInQueue}>\r\n        <Fab\r\n          variant=\"extended\"\r\n          color=\"secondary\"\r\n          aria-label=\"clear\"\r\n          onClick={() => {\r\n            props.clearAllSelected();\r\n          }}\r\n          style={generateFabStyle}\r\n        >\r\n          <DeleteForeverIcon />\r\n          清空选择\r\n        </Fab>\r\n      </Grow>\r\n      <Fab\r\n        variant=\"extended\"\r\n        color=\"primary\"\r\n        aria-label=\"generate\"\r\n        onClick={() => {\r\n          handleClickOpen();\r\n          props.generateLinksFromList();\r\n        }}\r\n        style={clearFabStyle}\r\n      >\r\n        <FileDownloadIcon />\r\n        生成图片链接\r\n      </Fab>\r\n      <Dialog\r\n        open={open}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        scroll=\"paper\"\r\n        fullWidth={true}\r\n        maxWidth={\"md\"}\r\n        aria-labelledby=\"result-dialog-slide-title\"\r\n        aria-describedby=\"result-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"result-dialog-slide-title\" style={textDisplayStyle}>\r\n          {\"生成图片链接\"}\r\n        </DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <DialogContentText\r\n            id=\"result-dialog-slide-description\"\r\n            style={textDisplayStyle}\r\n          >\r\n            {returnLinkText(ngaChecked, selectOrderChecked)}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <Divider />\r\n        <DialogActions>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  color=\"primary\"\r\n                  checked={ngaChecked}\r\n                  onChange={handleNgaSwitchChange}\r\n                />\r\n              }\r\n              label=\"使用NGA图床\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  color=\"primary\"\r\n                  checked={selectOrderChecked}\r\n                  onChange={handleOrderSwitchChange}\r\n                />\r\n              }\r\n              label=\"按照选择顺序生成\"\r\n            />\r\n          </FormGroup>\r\n          <Tooltip\r\n            arrow\r\n            open={openTip}\r\n            onClose={handleCloseTip}\r\n            disableHoverListener\r\n            placement=\"top\"\r\n            title=\"已复制至剪贴板!\"\r\n            style={textDisplayStyle}\r\n          >\r\n            <CopyToClipBoard\r\n              text={returnLinkText(ngaChecked, selectOrderChecked)}\r\n            >\r\n              <IconButton\r\n                disabled={props.linkList === \"\"}\r\n                onClick={handleClickButton}\r\n              >\r\n                <AssignmentIcon />\r\n              </IconButton>\r\n            </CopyToClipBoard>\r\n          </Tooltip>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","export const types = [\r\n  { id: \"chara\", name: \"角色\" },\r\n  { id: \"dragon\", name: \"龙\" },\r\n  { id: \"weapon\", name: \"武器\" },\r\n  { id: \"amulet\", name: \"龙辉护符\" },\r\n];\r\n\r\nexport const idSubTable = {\r\n  19900001: \"19850400\",\r\n  19900002: \"19150400\",\r\n  19900005: \"19150300\",\r\n};\r\n\r\nexport const filterType = {\r\n  chara: [\r\n    { id: \"chara_rarity\", name: \"原生稀有度\" },\r\n    { id: \"chara_weapon_type\", name: \"武器种类\" },\r\n    { id: \"chara_element\", name: \"属性\" },\r\n  ],\r\n  dragon: [\r\n    { id: \"dragon_rarity\", name: \"稀有度\" },\r\n    { id: \"dragon_element\", name: \"属性\" },\r\n  ],\r\n  weapon: [\r\n    { id: \"weapon_rarity\", name: \"稀有度\" },\r\n    { id: \"weapon_type\", name: \"武器种类\" },\r\n    { id: \"weapon_element\", name: \"属性\" },\r\n  ],\r\n  amulet: [{ id: \"amulet_rarity\", name: \"稀有度\" }],\r\n};\r\n\r\nexport const filterParam = {\r\n  chara_rarity: [\r\n    { id: 3, name: \"三星\", color: \"#a67419\" },\r\n    { id: 4, name: \"四星\", color: \"#b5b5b5\" },\r\n    { id: 5, name: \"五星\", color: \"#fcc256\" },\r\n  ],\r\n  chara_weapon_type: [\r\n    { id: 1, name: \"剑\", color: \"#0051c9\" },\r\n    { id: 2, name: \"刀\", color: \"#0051c9\" },\r\n    { id: 3, name: \"短剑\", color: \"#0051c9\" },\r\n    { id: 4, name: \"斧\", color: \"#0051c9\" },\r\n    { id: 5, name: \"枪\", color: \"#0051c9\" },\r\n    { id: 6, name: \"弓\", color: \"#0051c9\" },\r\n    { id: 7, name: \"魔杖\", color: \"#0051c9\" },\r\n    { id: 8, name: \"法杖\", color: \"#0051c9\" },\r\n    { id: 9, name: \"铳\", color: \"#0051c9\" },\r\n  ],\r\n  chara_element: [\r\n    { id: 1, name: \"火\", color: \"#c92626\" },\r\n    { id: 2, name: \"水\", color: \"#47b8de\" },\r\n    { id: 3, name: \"风\", color: \"#00a331\" },\r\n    { id: 4, name: \"光\", color: \"#fcc256\" },\r\n    { id: 5, name: \"暗\", color: \"#520099\" },\r\n    { id: 9, name: \"无\", color: \"#b5b5b5\" },\r\n  ],\r\n  dragon_rarity: [\r\n    { id: 3, name: \"三星\", color: \"#a67419\" },\r\n    { id: 4, name: \"四星\", color: \"#b5b5b5\" },\r\n    { id: 5, name: \"五星\", color: \"#fcc256\" },\r\n  ],\r\n  dragon_element: [\r\n    { id: 1, name: \"火\", color: \"#c92626\" },\r\n    { id: 2, name: \"水\", color: \"#47b8de\" },\r\n    { id: 3, name: \"风\", color: \"#00a331\" },\r\n    { id: 4, name: \"光\", color: \"#fcc256\" },\r\n    { id: 5, name: \"暗\", color: \"#520099\" },\r\n    { id: 9, name: \"无\", color: \"#b5b5b5\" },\r\n  ],\r\n  weapon_rarity: [\r\n    { id: 1, name: \"一星\", color: \"#a8b8a5\" },\r\n    { id: 2, name: \"二星\", color: \"#5a8700\" },\r\n    { id: 3, name: \"三星\", color: \"#a67419\" },\r\n    { id: 4, name: \"四星\", color: \"#b5b5b5\" },\r\n    { id: 5, name: \"五星\", color: \"#fcc256\" },\r\n    { id: 6, name: \"六星\", color: \"#660099\" },\r\n  ],\r\n  weapon_type: [\r\n    { id: 1, name: \"剑\", color: \"#0051c9\" },\r\n    { id: 2, name: \"刀\", color: \"#0051c9\" },\r\n    { id: 3, name: \"短剑\", color: \"#0051c9\" },\r\n    { id: 4, name: \"斧\", color: \"#0051c9\" },\r\n    { id: 5, name: \"枪\", color: \"#0051c9\" },\r\n    { id: 6, name: \"弓\", color: \"#0051c9\" },\r\n    { id: 7, name: \"魔杖\", color: \"#0051c9\" },\r\n    { id: 8, name: \"法杖\", color: \"#0051c9\" },\r\n    { id: 9, name: \"铳\", color: \"#0051c9\" },\r\n  ],\r\n  weapon_element: [\r\n    { id: 1, name: \"火\", color: \"#c92626\" },\r\n    { id: 2, name: \"水\", color: \"#47b8de\" },\r\n    { id: 3, name: \"风\", color: \"#00a331\" },\r\n    { id: 4, name: \"光\", color: \"#fcc256\" },\r\n    { id: 5, name: \"暗\", color: \"#520099\" },\r\n    { id: 9, name: \"无\", color: \"#b5b5b5\" },\r\n  ],\r\n  amulet_rarity: [\r\n    { id: 3, name: \"三星\", color: \"#a67419\" },\r\n    { id: 4, name: \"四星\", color: \"#b5b5b5\" },\r\n    { id: 5, name: \"五星\", color: \"#fcc256\" },\r\n    { id: 9, name: \"天魔\", color: \"#06c4b1\" },\r\n  ],\r\n};\r\n","import { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { filterType, filterParam } from \"../data/params\";\r\n\r\nconst textDisplayStyle = {\r\n  fontFamily: ['\"Noto Sans SC\"', \"sans-serif\"].join(\",\"),\r\n  fontWeight: 700,\r\n  fontSize: \"0.85em\",\r\n};\r\n\r\nclass ItemFilter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          wrap=\"wrap\"\r\n        >\r\n          {filterType[this.props.type].map((filter) => {\r\n            return (\r\n              <Grid item key={filter.id}>\r\n                <Paper\r\n                  style={{\r\n                    padding: 8,\r\n                  }}\r\n                >\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\" style={textDisplayStyle}>\r\n                      {filter.name}\r\n                    </FormLabel>\r\n                    <FormGroup aria-label=\"position\" row>\r\n                      {filterParam[filter.id].map((item) => {\r\n                        return (\r\n                          <FormControlLabel\r\n                            key={item.id}\r\n                            control={\r\n                              <Checkbox\r\n                                checked={this.props.filterData[\r\n                                  filter.id\r\n                                ].includes(item.id)}\r\n                                onChange={() => {\r\n                                  this.props.handleCheckBoxChanged(\r\n                                    filter.id,\r\n                                    item.id\r\n                                  );\r\n                                  this.props.updateIconList();\r\n                                }}\r\n                                name={item.name}\r\n                                style={{\r\n                                  ...textDisplayStyle,\r\n                                  color: item.color,\r\n                                }}\r\n                                size=\"small\"\r\n                              />\r\n                            }\r\n                            label={\r\n                              <Typography style={textDisplayStyle}>\r\n                                {item.name}\r\n                              </Typography>\r\n                            }\r\n                          />\r\n                        );\r\n                      })}\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Paper>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemFilter;\r\n","import React, { Component } from \"react\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconItem from \"./iconItem\";\r\nimport ResultDialog from \"./resultDialog\";\r\nimport ItemFilter from \"./itemFilter\";\r\nimport { filterType, filterParam, idSubTable } from \"../data/params\";\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: ['\"Noto Sans SC\"', \"sans-serif\"].join(\",\"),\r\n  },\r\n});\r\n\r\nclass IconGroup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      iconList: [],\r\n      selectedIconList: [],\r\n      linkList: [],\r\n      filterData: {},\r\n      initialzed: false,\r\n    };\r\n    this.initializeIconList = this.initializeIconList.bind(this);\r\n    this.initilizeFilterData = this.initilizeFilterData.bind(this);\r\n    this.updateIconList = this.updateIconList.bind(this);\r\n    this.checkMatchFilter = this.checkMatchFilter.bind(this);\r\n    this.handleCheckBoxChanged = this.handleCheckBoxChanged.bind(this);\r\n    this.toggleSelectedById = this.toggleSelectedById.bind(this);\r\n    this.addToList = this.addToList.bind(this);\r\n    this.removeFromList = this.removeFromList.bind(this);\r\n    this.generateLinksFromList = this.generateLinksFromList.bind(this);\r\n    this.clearAllSelected = this.clearAllSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initializeIconList();\r\n    this.initilizeFilterData();\r\n    this.setState({ initialzed: true });\r\n  }\r\n\r\n  initializeIconList() {\r\n    let tmpIconList = [];\r\n    for (var key in this.props.iconJson) {\r\n      let icon = {\r\n        uniqueId: key,\r\n        ...this.props.iconJson[key],\r\n        selected: false,\r\n      };\r\n      tmpIconList.push(icon);\r\n    }\r\n    this.setState({ iconList: tmpIconList });\r\n  }\r\n\r\n  initilizeFilterData() {\r\n    let tmpFilterData = {};\r\n    for (var index in filterType[this.props.type]) {\r\n      let element = filterType[this.props.type][index].id;\r\n      tmpFilterData[element] = filterParam[element].map((item) => item.id);\r\n    }\r\n    this.setState({ filterData: tmpFilterData });\r\n  }\r\n\r\n  updateIconList() {\r\n    let tmpIconList = [];\r\n    let selected = false;\r\n    for (var key in this.props.iconJson) {\r\n      selected = this.state.selectedIconList.includes(key) ? true : false;\r\n      if (\r\n        selected ||\r\n        this.checkMatchFilter(\r\n          this.props.iconJson[key].id,\r\n          this.state.filterData\r\n        )\r\n      ) {\r\n        let icon = {\r\n          uniqueId: key,\r\n          ...this.props.iconJson[key],\r\n          selected: selected,\r\n        };\r\n        tmpIconList.push(icon);\r\n      }\r\n    }\r\n    this.setState({ iconList: tmpIconList });\r\n  }\r\n\r\n  checkMatchFilter(item, filterData) {\r\n    if (item.startsWith(\"199\")) {\r\n      item = idSubTable[item];\r\n    }\r\n    for (var param in filterData) {\r\n      switch (param) {\r\n        case \"chara_rarity\": //10950402\r\n          if (!filterData[param].includes(parseInt(item[3]))) {\r\n            return false;\r\n          }\r\n          break;\r\n        case \"chara_weapon_type\":\r\n          if (!filterData[param].includes(parseInt(item[2]))) {\r\n            return false;\r\n          }\r\n          break;\r\n        case \"chara_element\":\r\n          if (!filterData[param].includes(parseInt(item[5]))) {\r\n            return false;\r\n          }\r\n          break;\r\n        case \"dragon_rarity\": //20050310\r\n          if (!filterData[param].includes(parseInt(item[3]))) {\r\n            return false;\r\n          }\r\n          break;\r\n        case \"dragon_element\":\r\n          if (!filterData[param].includes(parseInt(item[5]))) {\r\n            return false;\r\n          }\r\n          break;\r\n        case \"weapon_rarity\": //30860403\r\n          if (!filterData[param].includes(parseInt(item[3]))) {\r\n            return false;\r\n          }\r\n          break;\r\n        case \"weapon_type\":\r\n          if (!filterData[param].includes(parseInt(item[2]))) {\r\n            return false;\r\n          }\r\n          break;\r\n        case \"weapon_element\":\r\n          if (!filterData[param].includes(parseInt(item[5]))) {\r\n            return false;\r\n          }\r\n          break;\r\n        case \"amulet_rarity\": //40020001\r\n          if (!filterData[param].includes(parseInt(item[3]))) {\r\n            return false;\r\n          }\r\n          break;\r\n        default:\r\n          return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleCheckBoxChanged(type, value) {\r\n    let tmpFilterData = this.state.filterData;\r\n    var index = tmpFilterData[type].indexOf(value);\r\n    if (index !== -1) {\r\n      tmpFilterData[type].splice(index, 1);\r\n    } else {\r\n      tmpFilterData[type].push(value);\r\n    }\r\n    this.setState({ filterData: tmpFilterData });\r\n  }\r\n\r\n  toggleSelectedById(uniqueId) {\r\n    let tmpIconList = this.state.iconList;\r\n    let idx = tmpIconList.findIndex((x) => x.uniqueId === uniqueId);\r\n    tmpIconList[idx].selected = !tmpIconList[idx].selected;\r\n    this.setState({ iconList: tmpIconList });\r\n  }\r\n\r\n  addToList(id) {\r\n    var newIconList = this.state.selectedIconList;\r\n    newIconList.push(id);\r\n    this.setState({ selectedIconList: newIconList });\r\n    console.log(newIconList);\r\n  }\r\n\r\n  removeFromList(id) {\r\n    var newIconList = this.state.selectedIconList;\r\n    var index = newIconList.indexOf(id);\r\n    if (index !== -1) {\r\n      newIconList.splice(index, 1);\r\n    }\r\n    this.setState({ selectedIconList: newIconList });\r\n    console.log(newIconList);\r\n  }\r\n\r\n  generateLinksFromList(usingNgaLink, inSelectedOrder) {\r\n    var iconList = this.state.selectedIconList;\r\n    var newLinkList = iconList.map((id) => {\r\n      return {\r\n        id: id,\r\n        giteeLink: `[img]${this.props.iconJson[id].path}[/img]`.replace(\r\n          \"./\",\r\n          \"https://sh0wer1ee.gitee.io/dlicons/\"\r\n        ),\r\n        ngaLink: `[img]${this.props.iconJson[id].nga_path}[/img]`,\r\n      };\r\n    });\r\n\r\n    this.setState({ linkList: newLinkList });\r\n  }\r\n\r\n  clearAllSelected() {\r\n    let tmpIconList = this.state.iconList;\r\n    tmpIconList = tmpIconList.map((item) => {\r\n      return {\r\n        ...item,\r\n        selected: false,\r\n      };\r\n    });\r\n    this.setState({\r\n      iconList: tmpIconList,\r\n      selectedIconList: [],\r\n      linkList: [],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.initialzed && (\r\n        <ThemeProvider theme={theme}>\r\n          <Grid\r\n            container\r\n            spacing={1}\r\n            alignItems=\"flex-start\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <ItemFilter\r\n              type={this.props.type}\r\n              filterData={this.state.filterData}\r\n              handleCheckBoxChanged={this.handleCheckBoxChanged}\r\n              updateIconList={this.updateIconList}\r\n            ></ItemFilter>\r\n            {this.state.iconList.map((icon) => (\r\n              <IconItem\r\n                icon={icon}\r\n                key={icon.uniqueId}\r\n                uniqueId={icon.uniqueId}\r\n                selected={icon.selected}\r\n                toggleSelectedById={this.toggleSelectedById}\r\n                addToList={this.addToList}\r\n                removeFromList={this.removeFromList}\r\n              />\r\n            ))}\r\n          </Grid>\r\n          <ResultDialog\r\n            generateLinksFromList={this.generateLinksFromList}\r\n            clearAllSelected={this.clearAllSelected}\r\n            linkList={this.state.linkList}\r\n            hasValueInQueue={\r\n              this.state.selectedIconList.length === 0 ? false : true\r\n            }\r\n          ></ResultDialog>\r\n        </ThemeProvider>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default IconGroup;\r\n","import { React, Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconGroup from \"./components/iconGroup\";\r\nimport { types } from \"./data/params\";\r\n\r\nvar indexJson = {};\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst theme = createTheme({\r\n  tab: {\r\n    fontFamily: ['\"Noto Sans SC\"', \"sans-serif\"].join(\",\"),\r\n    fontSize: \"0.85rem\",\r\n    fontWeight: 700,\r\n  },\r\n  typography: {\r\n    fontFamily: ['\"Noto Sans SC\"', \"sans-serif\"].join(\",\"),\r\n  },\r\n});\r\n\r\nconst textDisplayStyle = {\r\n  fontFamily: ['\"Noto Sans SC\"', \"sans-serif\"].join(\",\"),\r\n  fontSize: \"1rem\",\r\n  fontWeight: 700,\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0,\r\n\r\n      type: \"chara\",\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"./index.json\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          indexJson = result;\r\n          this.setState({ loaded: true });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const handleChange = (event, newValue) => {\r\n      this.setState({\r\n        value: newValue,\r\n        type: types[newValue].id,\r\n      });\r\n    };\r\n\r\n    return (\r\n      this.state.loaded && (\r\n        <ThemeProvider theme={theme}>\r\n          <AppBar position=\"sticky\" color=\"default\">\r\n            <Tabs\r\n              value={this.state.value}\r\n              onChange={handleChange}\r\n              aria-label=\"icon tabs\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n            >\r\n              <Tab\r\n                label={types[0].name}\r\n                style={textDisplayStyle}\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab\r\n                label={types[1].name}\r\n                style={textDisplayStyle}\r\n                {...a11yProps(1)}\r\n              />\r\n              <Tab\r\n                label={types[2].name}\r\n                style={textDisplayStyle}\r\n                {...a11yProps(2)}\r\n              />\r\n              <Tab\r\n                label={types[3].name}\r\n                style={textDisplayStyle}\r\n                {...a11yProps(3)}\r\n              />\r\n            </Tabs>\r\n          </AppBar>\r\n          <TabPanel value={this.state.value} index={0}>\r\n            <IconGroup\r\n              iconJson={indexJson[\"chara\"]}\r\n              type={this.state.type}\r\n              addToList={this.addToList}\r\n              removeFromList={this.removeFromList}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={this.state.value} index={1}>\r\n            <IconGroup\r\n              iconJson={indexJson[\"dragon\"]}\r\n              type={this.state.type}\r\n              addToList={this.addToList}\r\n              removeFromList={this.removeFromList}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={this.state.value} index={2}>\r\n            <IconGroup\r\n              iconJson={indexJson[\"weapon\"]}\r\n              type={this.state.type}\r\n              addToList={this.addToList}\r\n              removeFromList={this.removeFromList}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={this.state.value} index={3}>\r\n            <IconGroup\r\n              iconJson={indexJson[\"amulet\"]}\r\n              type={this.state.type}\r\n              addToList={this.addToList}\r\n              removeFromList={this.removeFromList}\r\n            />\r\n          </TabPanel>\r\n        </ThemeProvider>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n//import \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}